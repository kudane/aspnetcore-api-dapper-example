@page "/genre/{id:int}"

@using Frontend.Blazor.Interface
@inject IMovieService movieService

<h1>Movie List</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (movieService.Movies.Count == 0)
{
    <p><em>Empty...</em></p>
}
else
{
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Page size: @_pagesize
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            @foreach (var pagesize in PageSizeList)
            {
                <a class="dropdown-item"
                   href="javascript:void(0)"
                   @onclick="@(e => HandlePageSize(pagesize))">
                    @pagesize
                </a>
            }
        </div>
    </div>

    <br />

    <table class="table">
        <thead>
            <tr>
                <th>Subject</th>
                <th>Summary</th>
                <th>Ratting</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var movie in movieService.Movies)
            {
                <tr>
                    <td>@movie.Subject</td>
                    <td>@movie.Summary</td>
                    <td>@movie.Ratting</td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @foreach (var item in movieService.Pagination.PageItems)
            {
                var text = item.Text;
                var active = text == movieService.CurrentPage ? "active" : null;

                <li class="page-item @active">
                    <span class="page-link"
                          style="cursor:pointer;"
                          href="javascript:void(0)"
                          @onclick="@(e => HandlePagiantion(text))">@text</span>
                    </li>
                }
        </ul>
    </nav>
}

@code {
    private List<int> PageSizeList = new List<int>() { 5, 20, 50, 100 };

    [Parameter]
    public int Id { get; set; }

    // Set OnInitializedAsync
    private int _pagesize;
    private int _pageNumber;

    #region Component Lift Cycle
    protected override async Task OnInitializedAsync()
    {
        _pageNumber = 1;
        _pagesize = PageSizeList.First();
        await GetMovieAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        _pageNumber = 1;
        await GetMovieAsync();
    }
    #endregion

    #region Event Handling
    private async Task HandlePageSize(int pagesize)
    {
        _pageNumber = 1;
        _pagesize = pagesize;
        await GetMovieAsync();
    }

    private async Task HandlePagiantion(string pageNumber)
    {
        if (pageNumber.Equals("..."))
        {
            return;
        }

        _pageNumber = int.Parse(pageNumber);
        await GetMovieAsync();
    }
    #endregion

    #region Call Service
    private async Task GetMovieAsync()
    {
        await movieService.LoadAsync(Id, _pagesize, _pageNumber);
        StateHasChanged();
    }
    #endregion
}
